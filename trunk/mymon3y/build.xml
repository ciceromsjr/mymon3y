<?xml version="1.0" encoding="UTF-8"?>

<!-- Build para o projeto de MyMon3y -->

<project basedir="." default="compilar" name="MyMon3y">

	<property file="build.properties" />
	
	<property name="build.dir" value="build" />
	<property name="webroot.dir" value="${basedir}/web" />
	<property name="webinf.dir" value="${webroot.dir}/WEB-INF" />	
	<property name="project.distname" value="mymon3y" />

	<path id="cobertura.classpath">
		<fileset dir="${mymon3y.lib.cobertura}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="mymon3y.classpathref">
		<fileset dir="${mymon3y.lib}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${mymon3y.lib.testes}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${mymon3y.lib.hibernate.annotations}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${mymon3y.lib.hibernate.core}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${mymon3y.lib.hibernate.validator}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${mymon3y.lib.jsf}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${mymon3y.src}" />
		<pathelement location="${mymon3y.src-testes}" />
		<pathelement location="${mymon3y.classes}" />
		<pathelement location="${mymon3y.classes-teste}" />
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

	<!-- LIMPAR -->
	<target name="limpar" description="Limpa o ambiente">
		<delete dir="${mymon3y.classes}" />
		<delete dir="${mymon3y.classes-cobertura}" />
		<delete dir="${mymon3y.classes-teste}" />
		<delete dir="${mymon3y.relatorios}" />
		<delete dir="${mymon3y.docs}" />
		<delete dir="${mymon3y.release}" />
		<delete dir="${mymon3y.java2html}" />
		<delete file="${mymon3y.jar}" />
		<delete file="cobertura.ser" />
	</target>
	<!-- /LIMPAR -->

	<!-- PREPARAR -->
	<target name="preparar" depends="limpar" description="Prepara o ambiente para compilação, testes de unidade e de cobertura">
		<mkdir dir="${mymon3y.classes}" />
		<mkdir dir="${mymon3y.classes-cobertura}" />
		<mkdir dir="${mymon3y.classes-teste}" />
		<mkdir dir="${mymon3y.relatorios}" />
		<mkdir dir="${mymon3y.relatorios.cobertura}" />
		<mkdir dir="${mymon3y.relatorios.test}" />
		<mkdir dir="${mymon3y.docs.api}" />
		<mkdir dir="${mymon3y.release}" />
		<mkdir dir="${mymon3y.java2html}" />
	</target>
	<!-- /PREPARAR -->

	<!-- JAVADOC -->
	<target name="javadoc" depends="preparar" description="Cria a documentação javadoc do projeto. O resultado pode ser visto em 'api-index.html'">
		<javadoc destdir="docs/api" author="false" version="false" use="true" windowtitle="${profilechecker.docs.api}">
			<classpath refid="mymon3y.classpathref" />
			<fileset dir="src" defaultexcludes="yes">
				<include name="**/*.java" />
			</fileset>
		</javadoc>
	</target>
	<!-- /JAVADOC -->

	<!-- COMPILAR -->
	<target name="compilar" depends="preparar" description="Compila o código principal">
		<javac srcdir="${mymon3y.src}" destdir="${mymon3y.classes}" debug="on" optimize="on" encoding="UTF-8">
			<classpath refid="mymon3y.classpathref" />
			<include name="**/*.java" />
		</javac>
	</target>
	<!-- /COMPILAR -->

	<!-- COMPILAR-TESTES -->
	<target name="compilar-testes" depends="compilar" description="Compila os códigos de teste de unidade">
		<javac srcdir="${mymon3y.src-testes}" destdir="${mymon3y.classes-teste}" debug="on" optimize="on">
			<classpath refid="mymon3y.classpathref" />
			<include name="**/*.java" />
		</javac>
	</target>
	<!-- /COMPILAR-TESTES -->

	<!-- COBERTURA-INSTR -->
	<target name="cobertura-instr" depends="compilar-testes" description="Compila o código principal fazendo a instrumentação necessária para rodar o teste de cobertura">
		<delete file="cobertura.ser" />

		<cobertura-instrument todir="${mymon3y.classes-cobertura}">
			<fileset dir="${mymon3y.classes}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${mymon3y.classes-teste}">
				<include name="**/*.class" />
			</fileset>
		</cobertura-instrument>
	</target>
	<!-- /COBERTURA-INSTR -->

	<!-- JAR SRC & CLASS -->
<!--	
	<target name="makejar" depends="compilar" description="Cria o .jar do projeto com código fonte e Class">
		<jar destfile="${mymon3y.jar}">
			<manifest>
				<attribute name="Built-By" value="${mymon3y.nome}" />
				<attribute name="Implementation-Version" value="${mymon3y.versao}" />
				<!-
				<attribute name="Main-Class" value="${mymon3y.classe-}" />
				<attribute name="Class-Path" value="mymon3y.jar" />
				->
			</manifest>
			<fileset dir="${mymon3y.classes}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${mymon3y.src}">
				<include name="**/*.java" />
			</fileset>
		</jar>
	</target>
-->	
	<!-- /JAR SRC & CLASS -->

	<!-- JAR CLASS //TODO -->
<!--	
	<target name="makejarclass" depends="compilar" description="Cria o .jar do projeto com os Classes">
		<jar destfile="${mymon3y.jar}">
			<manifest>
				<attribute name="Built-By" value="${mymon3y.nome}" />
				<attribute name="Implementation-Version" value="${mymon3y.versao}" />
				<!-
				<attribute name="Main-Class" value="${mymon3y.classe-}" />
				<attribute name="Class-Path" value="mymon3y.jar" />
				->
			</manifest>
			<fileset dir="${mymon3y.classes}">
				<include name="**/*.class" />
			</fileset>
		</jar>
	</target>
-->	
	<!-- /JAR SRC & CLASS -->

	<!-- TESTAR -->
	<target name="testar" depends="cobertura-instr" description="Executa os testes de unidade e cobertura">
		<junit fork="yes" printsummary="yes" haltonfailure="no" haltonerror="no">

			<sysproperty key="net.sourceforge.cobertura.datafile" file="${basedir}/cobertura.ser" />

			<classpath location="${mymon3y.classes-cobertura}" />
			<classpath refid="mymon3y.classpathref" />
			<classpath refid="cobertura.classpath" />

			<formatter type="xml" />
			<batchtest fork="yes" todir="${mymon3y.relatorios}">
				<fileset dir="${mymon3y.src-testes}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
		<junitreport todir="${mymon3y.relatorios.test}">
			<fileset dir="${mymon3y.relatorios}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${mymon3y.relatorios.test}" />
		</junitreport>
	</target>
	<!-- /TESTAR -->

	<!-- COBERTURA -->
	<target name="cobertura" depends="testar" description="Cria os reports do teste de cobertura. O resultado pode ser visto em 'cobertura-index.html'">
		<cobertura-report format="html" destdir="${mymon3y.relatorios.cobertura}">
			<fileset dir="${mymon3y.src}">
				<include name="**/*.java" />
			</fileset>
		</cobertura-report>
	</target>
	<!-- /COBERTURA -->

	<!-- EASY_ACCEPT-->
	<target name="testesdeaceitacao" depends="cobertura-instr" description="Executa os testes de aceitação EasyAccept (NÃO FUNCIONA)">
		<java classname="easyaccept.EasyAccept" fork="true" failonerror="true" maxmemory="512m" classpathref="mymon3y.classpathref">
			<classpath refid="mymon3y.classpathref" />
			<jvmarg value="-Dfile.encoding=UTF-8"/>
			<!--
			<arg line="com.google.code.mymon3y.Facade testesDeAceitacao/us1_1.txt testesDeAceitacao/us1_2.txt testesDeAceitacao/us2_1.txt testesDeAceitacao/us2_2.txt testesDeAceitacao/us3_1.txt testesDeAceitacao/us3_2.txt testesDeAceitacao/us4_1.txt testesDeAceitacao/us4_2.txt testesDeAceitacao/us5_1.txt testesDeAceitacao/us5_2.txt testesDeAceitacao/us6_1.txt testesDeAceitacao/us6_2.txt testesDeAceitacao/us7_1.txt"/>
			<classpath refid="mymon3y.classpathref" />
			-->
			<arg value="com.google.code.mymon3y.FacadeEasyAccept" />
			<arg value="testes-de-aceitacao/us1_1.txt" />
			<arg value="testes-de-aceitacao/us1_2.txt" />
			<arg value="testes-de-aceitacao/us2_1.txt" />
			<arg value="testes-de-aceitacao/us2_2.txt" />
			<arg value="testes-de-aceitacao/us3_1.txt" />
			<arg value="testes-de-aceitacao/us3_2.txt" />
			<arg value="testes-de-aceitacao/us4_1.txt" />
			<arg value="testes-de-aceitacao/us4_2.txt" />
			<arg value="testes-de-aceitacao/us5_1.txt" />
			<arg value="testes-de-aceitacao/us5_2.txt" />
			<arg value="testes-de-aceitacao/us6_1.txt" />
			<arg value="testes-de-aceitacao/us7_1.txt" />
			<arg value="testes-de-aceitacao/us8_1.txt" />
		</java>
	</target>
	<!-- EASY_ACCEPT -->

	<!-- RELEASE //TODO -->
<!--
	<target name="release" depends="testar, cobertura, javadoc, makejar" description="Cria uma release do projeto">
		<zip destfile="${mymon3y.release}/mymon3y.zip">
			<zipfileset dir="${mymon3y.docs}" prefix="docs" />
			<zipfileset file="${junit.jar}" prefix="lib" />
			<zipfileset file="${mymon3y.jar}" />
		</zip>
		<checksum file="${mymon3y.release}/mymon3y.zip" />
	</target>
-->	
	<!-- /RELEASE -->

	<!-- JAVA2HTML -->
	<taskdef name="java2html" classname="com.java2html.Java2HTMLTask" classpathref="mymon3y.classpathref" />

	<target name="java2html" depends="preparar" description="Cria o visualizador HTML do código-fonte. O resultado pode ser visto em 'java2html-index.html'">
		<java2html title="MyMon3y" simple="no" tabsize="4" marginsize="2" header="true" footer="false" destination="${mymon3y.java2html}">
			<fileset dir="${mymon3y.src}">
				<include name="**/*.java" />
			</fileset>
		</java2html>
	</target>
	<!-- /JAVA2HTML -->

	<taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="mymon3y.classpathref" />

	<!-- BD-REMOVER-BANCO -->
	<target name="bd-remover-banco" description="Remove o Esquema Logico no Banco de Dados">
		<delete dir="${mymon3y.db}" />
	</target>
	<!-- /BD-REMOVER-BANCO -->

	<!-- Gerar WAR //TODO -->
<!--
	<target name="war">
		<delete dir="${build.dir}" />
		<mkdir dir="${build.dir}" />
		<war basedir="${webroot.dir}" warfile="${build.dir}/${project.distname}.war" webxml="${webinf.dir}/web.xml">
			<exclude name="WEB-INF/${build.dir}/**" />
			<exclude name="WEB-INF/src/**" />
			<exclude name="WEB-INF/web.xml" />
		</war>
	</target>
-->
	<!-- /Gerar WAR -->
	
	<!-- AJUDA -->
	<target name="ajuda" description="Imprime o comando a ser executado para acessar esta ajuda">
		<echo>Projeto Remember The Contact</echo>
		<echo>Para acessar a ajuda execute: ant -p</echo>
	</target>
	<!-- /AJUDA -->

</project>
